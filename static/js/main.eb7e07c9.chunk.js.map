{"version":3,"sources":["components/Title.js","components/Scoreboard.js","components/Card.js","components/Cardboard.js","components/cardList.js","components/Instructions.js","components/Game.js","App.js","index.js"],"names":["Title","className","href","target","rel","src","alt","Scoreboard","props","score","bestScore","playAgain","onClick","Card","card","select","clean","divStyle","color","backgroundColor","name","selected","style","Cardboard","setScore","resetScore","cards","useEffect","i","length","j","Math","floor","random","map","cardList","Instructions","useState","show","setShow","id","Game","setBestScore","setCards","resetGame","defaultCards","updatedCards","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb7e07c9.chunk.js","sourcesContent":["const Title = () => {\r\n    return (\r\n        <div className=\"title\">\r\n            <h1 className=\"title__text\">Memory Card Game</h1>\r\n            <a href=\"https://github.com/sebapkfd/memory-card\" target=\"_blank\" rel=\"noreferrer\">\r\n                <img src=\"https://img.icons8.com/fluent-systems-filled/24/ffffff/github.png\" alt=\"Github\"/>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Title;","import React from \"react\";\r\n\r\nconst Scoreboard = (props) => {\r\n    const {score, bestScore, playAgain} = props;\r\n\r\n    if (score === 15) {\r\n        return (\r\n            <div className='score-board'>\r\n                <h2>You have won!</h2>\r\n                <button onClick={() => playAgain()}>Play Again</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"score-board\">\r\n            <h2 className=\"current-score\">Current Score: {score}</h2>\r\n            <h2 className=\"best-score\">Best Score: {bestScore}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scoreboard;","import React from \"react\";\r\n\r\nconst Card = (props) =>{\r\n    const {card, select, clean, score} = props;\r\n\r\n    const clickCard = () => {\r\n        if (score < 15) {\r\n            (card.selected) ? clean() : select(card.name);\r\n        }\r\n    }\r\n\r\n    const divStyle = {\r\n        color: 'white',\r\n        backgroundColor:`${card.name}`\r\n    };\r\n\r\n    return (\r\n        <div className=\"card\" onClick={clickCard} style={divStyle}>\r\n            <h3>{card.name}</h3>\r\n        </div>\r\n    )\r\n}\r\nexport default Card;","import React, {useEffect} from \"react\";\r\nimport Card from './Card';\r\n\r\nconst Cardboard = (props) => {\r\n    const {setScore, resetScore, cards, score} = props;\r\n\r\n    useEffect(() => {\r\n        for (let i = cards.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [cards[i], cards[j]] = [cards[j], cards[i]];\r\n        }\r\n    }, [cards])\r\n\r\n    return (\r\n        <div className=\"card-board\">\r\n            {cards.map((card) => {\r\n                return <Card\r\n                    card={card}\r\n                    score={score}\r\n                    select={setScore}\r\n                    clean={resetScore}\r\n                    key={card.name}\r\n                />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cardboard;","const cardList = [\r\n    {name: 'Crimson', selected : false},\r\n    {name: 'Navy', selected : false},\r\n    {name: 'Green', selected : false},\r\n    {name: 'Gold', selected : false},\r\n    {name: 'Orange', selected : false},\r\n    {name: 'Purple', selected : false},\r\n    {name: 'Brown', selected : false},\r\n    {name: 'Pink', selected : false},\r\n    {name: 'Gray', selected : false},\r\n    {name: 'Olive', selected : false},\r\n    {name: 'Aqua', selected : false},\r\n    {name: 'Teal', selected : false},\r\n    {name: 'Maroon', selected : false},\r\n    {name: 'Orchid', selected : false},\r\n    {name: 'Lime', selected : false},\r\n]\r\n\r\nexport default cardList;","import { useState } from \"react\";\r\n\r\nconst Instructions = () => {\r\n    const [show, setShow] = useState(false);\r\n\r\n    if (show) {\r\n        return (\r\n            <div id='instructions'>\r\n                <p>\r\n                    This game consists in selecting all the items without repeating any of them.\r\n                </p>\r\n                <button \r\n                    className='instructions-controller' \r\n                    onClick={() => setShow(false)}>\r\n                        Ok\r\n                    </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div id='show-instructions'>\r\n            <button \r\n                className='instructions-controller' \r\n                onClick={() =>setShow(true)}>\r\n                    Instructions\r\n                </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Instructions","import React, {useEffect, useState} from \"react\";\r\nimport Title from \"./Title\";\r\nimport ScoreBoard from \"./Scoreboard\";\r\nimport CardBoard from \"./Cardboard\";\r\nimport cardList from \"./cardList\";\r\nimport Instructions from \"./Instructions\";\r\n\r\nfunction Game() {\r\n    const [score, setScore] = useState(0);\r\n    const [bestScore, setBestScore] = useState(0);\r\n    const [cards, setCards] = useState(cardList);\r\n\r\n    const selectCard = (name) => {\r\n        let updatedCards = cards.map(card => {\r\n            if(card.name === name){\r\n                return {...card, selected: !card.selected}\r\n            }\r\n            return card;\r\n        })\r\n        setCards(updatedCards);\r\n        setScore(score + 1);\r\n    }\r\n\r\n    const resetGame = () => {\r\n        setScore(0);\r\n        let defaultCards = cards.map(card => {\r\n            return {...card, selected: false}\r\n        })\r\n        setCards(defaultCards);\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if(bestScore <= score) {\r\n            setBestScore(score);\r\n        }\r\n    }, [bestScore, score])\r\n\r\n    return (\r\n        <div className=\"game\">\r\n            <Title />\r\n            <Instructions />\r\n            <ScoreBoard\r\n                score={score}\r\n                bestScore={bestScore}\r\n                playAgain={resetGame}\r\n            />\r\n            <CardBoard\r\n                score={score}\r\n                setScore={selectCard}\r\n                resetScore={resetGame}\r\n                cards={cards}\r\n            />\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Game;\r\n","import \"./App.css\";\r\nimport Game from \"./components/Game\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <Game/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}