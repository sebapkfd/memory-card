{"version":3,"sources":["components/Title.js","components/Scoreboard.js","components/Card.js","components/Cardboard.js","components/Game.js","App.js","index.js"],"names":["Title","className","href","target","rel","src","alt","Scoreboard","props","score","bestScore","Card","card","select","clean","divStyle","color","backgroundColor","cardName","onClick","selected","style","Cardboard","setScore","resetScore","cards","useEffect","i","length","j","Math","floor","random","map","Game","useState","setBestScore","setCards","name","updatedCards","defaultCards","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAWeA,EAXD,WACV,OACI,sBAAKC,UAAU,QAAf,UACI,oBAAIA,UAAU,YAAd,8BACA,mBAAGC,KAAK,0CAA0CC,OAAO,SAASC,IAAI,aAAtE,SACI,qBAAKC,IAAI,oEAAoEC,IAAI,iBCQlFC,EAXI,SAACC,GAAW,IACpBC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,UAEd,OACI,sBAAKT,UAAU,aAAf,UACI,qBAAIA,UAAU,eAAd,4BAA6CQ,KAC7C,qBAAIR,UAAU,YAAd,yBAAuCS,SCepCC,EArBF,SAACH,GAAU,IACbI,EAAuBJ,EAAvBI,KAAMC,EAAiBL,EAAjBK,OAAQC,EAASN,EAATM,MASfC,EAAW,CACbC,MAAO,QACPC,gBAAgB,GAAD,OAAIL,EAAKM,WAG5B,OACI,qBAAKjB,UAAU,OAAOkB,QAbR,WACVP,EAAKQ,SAGLN,IAFAD,EAAOD,EAAKM,WAW0BG,MAAON,EAAjD,SACI,6BAAKH,EAAKM,cCSPI,EAzBG,SAACd,GAAW,IAEnBe,EAA+Bf,EAA/Be,SAAUC,EAAqBhB,EAArBgB,WAAYC,EAASjB,EAATiB,MAS7B,OAPAC,qBAAU,WACN,IAAK,IAAIC,EAAIF,EAAMG,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACvC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADH,EAEhB,CAACF,EAAMI,GAAIJ,EAAME,IAAvCF,EAAME,GAFgC,KAE5BF,EAAMI,GAFsB,QAI5C,CAACJ,IAGA,qBAAKxB,UAAU,YAAf,SACKwB,EAAMQ,KAAI,SAACrB,GACR,OAAO,cAAC,EAAD,CACHA,KAAMA,EACNC,OAAQU,EACRT,MAAOU,GACFZ,EAAKM,gBC6CfgB,MA7Df,WAAiB,IAAD,EACcC,mBAAS,GADvB,mBACL1B,EADK,KACEc,EADF,OAEsBY,mBAAS,GAF/B,mBAELzB,EAFK,KAEM0B,EAFN,OAGcD,mBAAS,CAC/B,CAACjB,SAAU,UAAWE,UAAW,GACjC,CAACF,SAAU,OAAQE,UAAW,GAC9B,CAACF,SAAU,QAASE,UAAW,GAC/B,CAACF,SAAU,OAAQE,UAAW,GAC9B,CAACF,SAAU,SAAUE,UAAW,GAChC,CAACF,SAAU,SAAUE,UAAW,GAChC,CAACF,SAAU,QAASE,UAAW,GAC/B,CAACF,SAAU,OAAQE,UAAW,GAC9B,CAACF,SAAU,OAAQE,UAAW,GAC9B,CAACF,SAAU,QAASE,UAAW,GAC/B,CAACF,SAAU,OAAQE,UAAW,GAC9B,CAACF,SAAU,OAAQE,UAAW,KAftB,mBAGLK,EAHK,KAGEY,EAHF,KA4CZ,OANAX,qBAAU,WACHhB,GAAaD,GACZ2B,EAAa3B,KAElB,CAACC,EAAWD,IAGX,sBAAKR,UAAU,OAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,CACIQ,MAAOA,EACPC,UAAWA,IAEf,cAAC,EAAD,CACID,MAAOA,EACPc,SAlCO,SAACe,GAChB,IAAIC,EAAed,EAAMQ,KAAI,SAAArB,GACzB,OAAGA,EAAKM,WAAaoB,EACV,2BAAI1B,GAAX,IAAiBQ,UAAWR,EAAKQ,WAE9BR,KAEXyB,EAASE,GACThB,EAASd,EAAQ,IA2BTe,WAxBM,WACdD,EAAS,GACT,IAAIiB,EAAef,EAAMQ,KAAI,SAAArB,GACzB,OAAO,2BAAIA,GAAX,IAAiBQ,UAAU,OAE/BiB,EAASG,IAoBDf,MAAOA,QCjDRgB,MARf,WACI,OACI,qBAAKxC,UAAU,MAAf,SACI,cAAC,EAAD,OCFZyC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.24a6d41e.chunk.js","sourcesContent":["const Title = () => {\n    return (\n        <div className=\"Title\">\n            <h1 className=\"TitleText\">Memory Card Game</h1>\n            <a href=\"https://github.com/sebapkfd/memory-card\" target=\"_blank\" rel=\"noreferrer\">\n                <img src=\"https://img.icons8.com/fluent-systems-filled/24/ffffff/github.png\" alt=\"Github\"/>\n            </a>\n        </div>\n    )\n}\n\nexport default Title;","import React from \"react\";\n\nconst Scoreboard = (props) => {\n    const {score, bestScore} = props;\n\n    return (\n        <div className=\"ScoreBoard\">\n            <h2 className=\"CurrentScore\">Current Score: {score}</h2>\n            <h2 className=\"BestScore\">Best Score: {bestScore}</h2>\n        </div>\n    )\n}\n\nexport default Scoreboard;","import React from \"react\";\n\nconst Card = (props) =>{\n    const {card, select, clean} = props;\n\n    const clickCard = () => {\n        if(!card.selected){\n            select(card.cardName);\n        }else{\n            clean();\n        }\n    }\n    const divStyle = {\n        color: 'white',\n        backgroundColor:`${card.cardName}`,\n    };\n\n    return (\n        <div className=\"Card\" onClick={clickCard} style={divStyle}>\n            <h3>{card.cardName}</h3>\n        </div>\n    )\n}\nexport default Card;","import React, {useEffect} from \"react\";\nimport Card from './Card';\n\nconst Cardboard = (props) => {\n\n    const {setScore, resetScore, cards} = props;\n\n    useEffect(() => {\n        for (let i = cards.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [cards[i], cards[j]] = [cards[j], cards[i]];\n        }\n    }, [cards])\n\n    return (\n        <div className=\"Cardboard\">\n            {cards.map((card) => {\n                return <Card\n                    card={card}\n                    select={setScore}\n                    clean={resetScore}\n                    key={card.cardName}\n                />\n            })}\n        </div>\n    )\n}\n\nexport default Cardboard;","import React, {useEffect, useState} from \"react\";\nimport Title from \"./Title\";\nimport ScoreBoard from \"./Scoreboard\";\nimport CardBoard from \"./Cardboard\";\n\nfunction Game() {\n    const [score, setScore] = useState(0);\n    const [bestScore, setBestScore] = useState(0);\n    const [cards, setCards] = useState([\n        {cardName: 'Crimson', selected : false},\n        {cardName: 'Navy', selected : false},\n        {cardName: 'Green', selected : false},\n        {cardName: 'Gold', selected : false},\n        {cardName: 'Orange', selected : false},\n        {cardName: 'Purple', selected : false},\n        {cardName: 'Brown', selected : false},\n        {cardName: 'Pink', selected : false},\n        {cardName: 'Gray', selected : false},\n        {cardName: 'Olive', selected : false},\n        {cardName: 'Aqua', selected : false},\n        {cardName: 'Teal', selected : false}\n    ])\n    \n\n    const selectCard = (name) => {    \n        let updatedCards = cards.map(card => {\n            if(card.cardName === name){\n                return {...card, selected: !card.selected}\n            }\n            return card;\n        })\n        setCards(updatedCards);\n        setScore(score + 1);\n    }\n\n    const resetGame = () => {\n        setScore(0);\n        let defaultCards = cards.map(card => {\n            return {...card, selected: false}\n        })\n        setCards(defaultCards);\n    }\n\n    useEffect(() =>{\n        if(bestScore <= score) {\n            setBestScore(score);\n        }\n    }, [bestScore, score])\n\n    return (\n        <div className=\"Game\">\n            <Title/>\n            <ScoreBoard\n                score={score}\n                bestScore={bestScore}\n            />\n            <CardBoard\n                score={score}\n                setScore={selectCard}\n                resetScore={resetGame}\n                cards={cards}\n            />\n        </div>\n    );\n}\n\nexport default Game;\n","import \"./App.css\";\nimport Game from \"./components/Game\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Game/>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}